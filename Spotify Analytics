/* For this project, I downloaded Spotify data from Kaggle.
Then I created a table where I could insert the Spotify data into.
Finally, I performed analytics on the data using SQL. */


#Created a new table 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the SpotifyData.csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, loudness, and danceability by artist and track and ordered my output by the average popularity
SELECT artist_name as artist, AVG(popularity), AVG(loudness), AVG(danceability)
FROM BIT_DB.Spotifydata 
GROUP BY artist
ORDER BY AVG(popularity) DESC;

#Then I determined which the top 10 most popular songs, also displaying the artist and popularity score
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata 
ORDER BY popularity DESC
LIMIT 10;
